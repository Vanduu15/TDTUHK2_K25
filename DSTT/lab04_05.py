# -*- coding: utf-8 -*-
"""Lab04_05_52100674.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p-s6zd_OHNSKCnDjOfvIlZugoCfWQMZX
"""

import numpy as np
from sympy import *
A = np.array([[1,1,-1],[1,-1,2],[2,1,1]])
b=np.array([7,3,9])
#option1
root1 = np.linalg.solve(A,b.T)
print(root1)
#option2
root2 = np.linalg.inv(A)@b
print(root2)
#option3
D = A.copy()
Dx = np.array([[7,1,-1],[3,-1,2],[9,1,1]])
Dy = np.array([[1,7,-1],[1,3,2],[2,9,1]])
Dz = np.array([[1,1,7],[1,-1,3],[2,1,9]])
root3_x= np.linalg.det(Dx)/np.linalg.det(D)
root3_y= np.linalg.det(Dy)/np.linalg.det(D)
root3_z= np.linalg.det(Dz)/np.linalg.det(D)
print([root3_x,root3_y,root3_z])
#option4
M = Matrix([[1,1,-1,7],[1,-1,2,3],[2,1,1,9]])
root4, pivot = M.rref()
print(root4)

#bai1
#a
import numpy as np
from sympy import *
A= np.array([[1,2,1],[2,-1,1],[2,1,0]])
b= np.array([0,0,0])
#option1
root1=np.linalg.solve(A,b.T)
print(root1)
#option2
root2 = np.linalg.inv(A)@b
print(root2)
#option3
D = A.copy()
Dx = np.array([[0,2,1],[0,-2,1],[0,1,0]])
Dy = np.array([[1,0,1],[2,0,1],[2,0,0]])
Dz = np.array([[1,2,0],[2,-1,0],[2,1,0]])
root3_x= np.linalg.det(Dx)/np.linalg.det(D)
root3_y= np.linalg.det(Dy)/np.linalg.det(D)
root3_z= np.linalg.det(Dz)/np.linalg.det(D)
print([root3_x,root3_y,root3_z])
#option4
M = Matrix([[1,2,1,0],[2,-1,1,0],[2,1,0,0]])
root4, pivot = M.rref()
print(root4)

#b
import numpy as np
from sympy import *
A= np.array([[2,1,1,1],[1,2,1,1],[1,1,2,2],[1,1,1,2]])
b= np.array([1,1,1,1])
#option1
root1=np.linalg.solve(A,b.T)
print(root1)
#option2
root2 = np.linalg.inv(A)@b
print(root2)
#option3
D = A.copy()
Dx = np.array([[1,1,1,1],[1,2,1,1],[1,1,2,2],[1,1,1,2]])
Dy = np.array([[2,1,1,1],[1,1,1,1],[1,1,2,2],[1,1,1,2]])
Dz = np.array([[2,1,1,1],[1,2,1,1],[1,1,1,2]])
Dt = np.array([])
root3_x= np.linalg.det(Dx)/np.linalg.det(D)
root3_y= np.linalg.det(Dy)/np.linalg.det(D)
root3_z= np.linalg.det(Dz)/np.linalg.det(D)
print([root3_x,root3_y,root3_z])
#option4
M = Matrix([[2,1,1,1,1],[1,2,1,1,1],[1,1,2,2,1],[1,1,1,2,1]])
root4, pivot = M.rref()
print(root4)

#bai2
#a
import numpy as np
from sympy import *
import matplotlib.pyplot as plt
a1 = 6
a2 = 3
b1 = 4
b2 = 2
c1 = 7
c2 = 15
x = np.arange(-50,5)
# ax + by= x=>c
y1= (c1-a1*x)/b1
y2= (c2-a2*x)/b2

fig = plt.figure()
plt.title("a")
plt.plot(x,y1,"b")
plt.plot(x,y2,"r")
plt.show()

#bai2
#b
import numpy as np
from sympy import *
import matplotlib.pyplot as plt
a1 = 6
a2 = 3
b1 = 10
b2 = 2
c1 = 7
c2 = 15
x = np.arange(-5,20)
# ax + by= x=>c
y1= (c1-a1*x)/b1
y2= (c2-a2*x)/b2

fig = plt.figure()
plt.title("b")
plt.plot(x,y1,"b")
plt.plot(x,y2,"r")
plt.show()

#bai2
#c
import numpy as np
from sympy import *
import matplotlib.pyplot as plt
a1 = 6
a2 = 3
b1 = 8
b2 = 4
c1 = 12
c2 = 6
x = np.arange(-5,20)
# ax + by= x=>c
y1= (c1-a1*x)/b1
y2= (c2-a2*x)/b2

fig = plt.figure()
plt.title("c")
plt.plot(x,y1,"b+")
plt.plot(x,y2,"r")
plt.show()

#bai3
from mpl_toolkits import mplot3d
import numpy as np
from sympy import *
a1 = 6
a2 = 3
b1 = 10
b2 = 2
c1 = 7
c2 = 15
d1 = 15
d2 = 20
x,y = np.meshgrid(np.arange(-10,10),np.arange(-10,10))
z1 = (d1-a1*x-b1*y)/c1
z2 = (d2-a1*x-b2*y)/c2
fig = plt.figure()
ax = fig.add_subplot(221,projection='3d')
ax.plot_surface(x,y,z1, cmap = plt.cm.ocean, alpha = 0.4)
ax.plot_surface(x,y,z2, cmap = plt.cm.hsv, alpha = 0.4)

#codecuaco
from mpl_toolkits import mplot3d
import numpy as np
from sympy import *
a1 = 6
a2 = 3
b1 = 8
b2 = 4
c1 = 12
c2 = 6
d1 = 10
d2 = 150
x,y = np.meshgrid(np.arange(-5,20),np.arange(-5,20))
z1 = (d1-a1*x-b1*y)/c1
z2 = (d2-a1*x-b2*y)/c2
fig = plt.figure()
ax = fig.add_subplot(111,projection='3d')
ax.plot_surface(x,y,z1, cmap = plt.cm.ocean, alpha = 0.4)
ax.plot_surface(x,y,z2, cmap = plt.cm.hsv, alpha = 0.4)

#bai4
import numpy as np
from sympy import*
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
A=np.array([[1,1,2],[3,6,-5],[2,4,-3]])
B=np.array([1,-1,0])
#a
print(np.linalg.det(A))
print(np.linalg.inv(A))
#b
print(np.linalg.solve(A,B.T))
#c
D=A.copy()
Dx=np.array([[]])

#bai5
import numpy as np
from sympy import*
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
A=np.array([[1,2,1],[2,2,2],[2,4,1]])
B=np.array([1,1,2])
root1=np.linalg.solve(A,B.T)
print(root1)

#bai6
import numpy as np
from sympy import*
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
#p(t) = a0 + a1t + a2t^2 : {(1,6),(2,15),(3,38)}
#(1,6)=) a0 +a1+a2=6
#(2,15)=) a0+2a1+4a2=15
#(3,38)=) a0+3a1+9a2=38
A=np.array([[1,1,1],[1,2,4],[1,3,9]])
b = np.array([6,15,38])
a = np.linalg.solve(A,b.T)
print(a)
#p(t)=11-12t+7a^2
t =np.arange(-10,10)
t_s = 2.5
t_v= -2.5
pt =a[0]-a[1]*t+a[2]*t**2
pt_s =a[0]-a[1]*t_s+a[2]*t_s**2
pt_v =a[0]-a[1]*t_v+a[2]*t_v**2
fig =plt.figure()
plt.plot(t,pt)
plt.plot(t_s,pt_s,'or')
plt.plot(t_v,pt_v,'or')
plt.show()

#bai7
A=np.array([[3,3.2],[3.5,3.6]])
B=np.array([118.4,135.2])
a=np.linalg.solve(A,B.T)
print(a)

#bai8
A=np.array([[2,-4,4,0.077],[0,-2,2,-0.056],[2,-2,0,0],[0,0,0,1]])
B=np.array([3.86,-3.74,0,0])
a=np.linalg.solve(A,B.T)
print(a)

#bai9
A=np.array([[0.61,0.29,0.15],[0.35,0.59,0.063],[0.04,0.12,0.787]]);
B=np.array([1,2,3]);
print(B@A.T)

#bai10
A=np.array([[0.25,0.15,0.1],[0.4,0.15,0.2],[0.15,0.2,0.2]])
d=np.array([100,100,100])
print(d@(1-A).T)

#bai11
A=np.array([[3,0,-1,0],[8,0,0,-2],[0,2,-2,-1],[1,0,0,0]])
B=np.array([0,0,0,1])
root1=np.linalg.solve(A,B.T)
print(root1)